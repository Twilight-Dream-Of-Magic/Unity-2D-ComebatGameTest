root = true

[*.cs]
indent_style = space
indent_size = 4
end_of_line = lf
charset = utf-8-bom
insert_final_newline = true

# C# formatting
csharp_new_line_before_open_brace = all
csharp_indent_case_contents = true
csharp_prefer_braces = when_multiline:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:warning
# Expand single-line blocks/statements into multi-line (so VS/formatters will break long one-liners)
csharp_preserve_single_line_blocks = false
csharp_preserve_single_line_statements = false

# Naming conventions
# Types, Enums, Interfaces, Attributes => PascalCase
dotnet_naming_rule.types_should_be_pascalcase.symbols = types
dotnet_naming_rule.types_should_be_pascalcase.style = pascal_case_style

# Methods, Properties, Events => PascalCase
dotnet_naming_rule.members_should_be_pascalcase.symbols = members
dotnet_naming_rule.members_should_be_pascalcase.style = pascal_case_style

# Private fields => _camelCase
dotnet_naming_rule.private_fields_underscore.symbols = private_fields
dotnet_naming_rule.private_fields_underscore.style = underscore_camel_case_style

# Parameters/locals => camelCase (by IDE hints)

# Symbols
dotnet_naming_symbols.types.applicable_kinds = class, struct, enum, interface, delegate

dotnet_naming_symbols.members.applicable_kinds = property, method, event

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

# Styles
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

dotnet_naming_style.underscore_camel_case_style.capitalization = camel_case
dotnet_naming_style.underscore_camel_case_style.required_prefix = _

# File layout
file_header_template = 

# Comment: Avoid ambiguous abbreviations. Prefer full words in identifiers.
# Enforced via code review and PR template; see docs/CodingStandards.md